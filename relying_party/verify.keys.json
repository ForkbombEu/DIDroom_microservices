{
  "secrets_path": "relying_party/secrets.keys",
  "controller_path": "controller",
  "well-known_path": "public/relying_party/.well-known/openid-relying-party",
  "expires_in": 1800,
  "credential_issuer_well-known_api": "/.well-known/openid-credential-issuer",
  "did": "https://did.dyne.org/dids/",
  "credential_issuer_path": "credential_issuer",
  "body_path": "body",
  "did_path": "did",
  "f": "f",
  "a": "a",
  "firebase_url": "http://issuer1.zenswarm.forkbomb.eu:3366/verify-credential",
  "zen_1_kid_from_wk": "Given I have a 'string array' in path 'result.jwks.keys'\nGiven I have a 'string' named 'given_alg'\nGiven I have a 'string' named 'did'\n\nForeach 'jwk' in 'keys'\n    When I pickup from path 'jwk.alg'\n    If I verify 'alg' is equal to 'given_alg'\n        When I copy 'kid' from 'jwk' to 'kid'\n    EndIf\nEndForeach\n\nWhen I append the 'kid' to 'did'\n\nThen print the 'did'\n",
  "zen_2_pk_from_did": "Scenario 'w3c': get public key from did document\n\nGiven I have a 'string dictionary' in path 'result.didDocument'\n\nWhen I create 'es256' public key from did document 'didDocument'\n\nWhen I create the 'string dictionary' named 'credential_issuer'\nWhen I move the 'es256 public key' in 'credential_issuer'\n\nThen print the 'credential_issuer' as 'base64'\n",
  "zen_3_check_presentation": "Scenario 'sd_jwt': verify presentation\nScenario 'w3c': create jws proof\nScenario 'es256' : verify SD-JWT signature\n\nGiven I have a 'keyring'\nGiven I have a 'time' named 'expires_in'\n\nGiven I have a 'string dictionary' named 'body'\nGiven I have a 'string' named 'id'\nGiven I have a 'signed selective disclosure' named 'vp'\n\nGiven I have a 'es256 public key' from 'credential_issuer'\n\nGiven I have a 'string dictionary' named 'relying_party_well-known'\nGiven I have a 'string' named 'relying_party' in 'relying_party_well-known'\n\n#verify the verifiable presentation and create 'result' the array of disclosed claims\nWhen I create the 'string array' named 'result'\n\nIf I verify signed selective disclosure 'vp' issued by 'credential_issuer' is valid\n    When I pickup from path 'vp.disclosures'\n    Foreach 'dis_array' in 'disclosures'\n        When I create the copy of element '2' from array 'dis_array'\n        When I move the 'copy' in 'result'\n    EndForeach\nEndIf\n\n## 1. Create response\n\nWhen I create the 'string dictionary' named 'response'\nWhen I move the 'result' in 'response'\nWhen I move the 'id' in 'response'\nWhen I create the timestamp\nWhen I create result of 'timestamp' + 'expires_in'\nWhen I move 'timestamp' to 'iat' in 'response'\nWhen I move 'result' to 'exp' in 'response'\nWhen I move 'relying_party' to 'iss' in 'response'\n\n## end 1.\n\n## 2. create proof-header\n\nWhen I create the 'string dictionary' named 'proof-header'\nWhen I set 'alg' to 'ES256' as 'string'\nWhen I set 'typ' to 'open4vci-proof+jwt' as 'string'\n\nWhen I pickup from path 'relying_party_well-known.jwks.keys'\nWhen I create the copy of element '1' from array 'keys'\nWhen I move 'copy' to 'jwk' in 'proof-header'\n\nWhen I move 'alg' in 'proof-header'\nWhen I move 'typ' in 'proof-header'\n\n## end 2,\n\n# 3. create jws from proof-header and response\n\nWhen I create the jws signature of header 'proof-header' and payload 'response'\nWhen I rename the 'jws signature' to 'message'\n\n## end 3.\n\nWhen I move the 'message' in 'body'\n\nThen print the 'body'\n"
}
