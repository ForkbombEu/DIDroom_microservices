{
	"secrets_path": "credential_issuer/secrets.keys",
	"controller_path": "controller",
	"well-known_path": "public/credential_issuer/.well-known/openid-credential-issuer",
	"zen_1": "Scenario 'w3c': verify jws\n\n# headers\nGiven I have a 'string' named 'authorization' in 'request'\nGiven I rename 'authorization' to 'token'\nGiven I have a 'bearer json web token' named 'authorization' in 'request'\n\n# well-known.authorization_server\nGiven I have a 'string array' named 'authorization_servers'\n\n# verify iss\nWhen I pickup a 'string' from path 'authorization.payload.iss'\nIf I verify 'iss' is not found in 'authorization_servers'\nWhen I exit with error message 'the authorization server that created the access token is not found in the list of authorized authz server in the issuers well known'\nEndif\n\n# create as_well-known_endpoint\nIf I verify 'iss' has suffix '/'\nWhen I split the rightmost '1' bytes of 'iss'\nEndif\nWhen I append the string '/.well-known/oauth-authorization-server' to 'iss'\nand I rename 'iss' to 'as_well-known_endpoint'\n\n# removing 'Bearer ' (7 chars) from the start of the string\nWhen I split leftmost '7' bytes of 'token'\n\nThen print the 'as_well-known_endpoint' as 'string'\nThen print the 'token'\n",
	"as_well-known_endpoint_path": "as_well-known_endpoint",
	"as_well-known_endpoint_path_array": ["as_well-known_endpoint_path_array"],
	"r.introspection_endpoint": "result.introspection_endpoint",
	"r.holder_claims": "result.holder_claims",
	"expires_in": 2592000
}