Rule unknown ignore

Scenario 'w3c': verify jws

# keyring
Given I send path 'secrets_path' and read file content and output secret into 'secrets'
Given I send object 'secrets' and send path 'controller_path' and manipulate and get and output into 'controller'
Given I send object 'secrets' and send path 'controller' and manipulate and get and output secret into 'personal_keyring'

# wk
Given I send path 'well-known_path' and read file content and output into 'credential_issuer_well-known'

# keyring
Given I have the 'keyring' in 'personal_keyring'

# headers
Given I have a 'string' in path 'http_headers.request.authorization'
Given I rename 'authorization' to 'token'
Given I have a 'bearer json web token' in path 'http_headers.request.authorization'

# well-known.authorization_server
Given I have a 'string dictionary' named 'credential_issuer_well-known'
Given I have a 'string array' in path 'credential_issuer_well-known.authorization_servers' 

# data in input
Given I have a 'string' named 'vct'
and I have a 'string' named 'jwt' in 'proof'
and I have a 'string dictionary' named 'proof'
and I have a 'string dictionary' named 'http_headers'

# verify jws
When I verify the jws signature in 'jwt'

# verify iss
When I pickup a 'string' from path 'authorization.payload.iss'
If I verify 'iss' is not found in 'authorization_servers'
When I exit with error message 'the authorization server that created the access token is not found in the list of authorized authz server in the issuers well known'
Endif

# create as_well-known_endpoint
If I verify 'iss' has suffix '/'
When I split the rightmost '1' bytes of 'iss'
Endif
When I append the string '/.well-known/oauth-authorization-server' to 'iss'
and I rename 'iss' to 'as_well-known_endpoint'

# removing 'Bearer ' (7 chars) from the start of the string
When I split leftmost '7' bytes of 'token'
and I create the 'string dictionary' named 'post_data'
and I move 'token' in 'post_data'

Then print the 'vct'
and print the 'proof'
and print the 'as_well-known_endpoint' as 'string'
and print the 'post_data'
and print the 'keyring'
and print the 'credential_issuer_well-known'

Then I connect to 'as_well-known_endpoint' and do get and output into 'result'
Then I send object 'result' and send path 'r.introspection_endpoint' and manipulate and get and output into 'introspection_endpoint'
Then I manipulate and delete and output into 'as_well-known_endpoint'
Then I manipulate and delete and output into 'result'