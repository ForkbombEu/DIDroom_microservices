Scenario 'http'
Scenario 'w3c': create jwk

Given I send path 'secrets_path' and read file content and output secret into 'secrets'
Given I send object 'secrets' and send path 'controller_path' and manipulate and get and output into 'controller'
Given I send object 'secrets' and send path 'controller' and manipulate and get and output secret into 'personal_keyring'

Given I send path 'well-known_path' and read file content and output into 'well-known'
Given I have a 'string dictionary' named 'well-known'

# Loading the private keys
Given my name is in a 'string' named 'controller'
Given I have the 'keyring' in 'personal_keyring'

Given I have a 'string dictionary' named 'server'
Given I have a 'string dictionary' named 'request'

Given I have a 'string' named 'request_uri'
Given I have a 'string' named 'client_id'
Given I have a 'string dictionary' named 'data'

#-server data
When I pickup from path 'well-known.issuer'
When I move 'issuer' to 'url' in 'server'
When I create jwk of es256 public key with private key
When I move 'jwk' in 'server'

# - request.body
When I set 'base-url' to 'http://' as 'string'
When I create the url from 'base-url'
When I append 'client_id' as http request to 'url'
When I append the percent encoding of 'request_uri' as http request to 'url'
When I split the leftmost '8' bytes of 'url'
When I rename the 'url' to 'body'
When I move 'body' in 'request'

# TODO: retrieve the redirect_uri from par request (new slangroom statement needed)
When I create the 'string dictionary' named 'redirect_uri_dict'
And I set 'redirect_uri' to 'https://wallet.didroom.com/' as 'string'
And I move 'redirect_uri' in 'redirect_uri_dict'

Then print the 'server'
Then print the 'request'
Then print the 'request_uri'
Then print the 'data'
Then print the 'redirect_uri_dict'

Then I send object 'server' and send properties 'properties' and manipulate and pick and output secret into 'secret_server'
Then I manipulate and delete and output into 'server'

Then I send request_uri 'request_uri' and send data 'data' and send server_data 'secret_server' and add data to authorization details
Then I manipulate and delete and output into 'request_uri'
Then I manipulate and delete and output into 'data'

Then I send request 'request' and send server_data 'secret_server' and generate authorization code and output into 'authCode_jwt'
Then I manipulate and delete and output into 'request'
Then I manipulate and delete and output into 'secret_server'

Then I send keys 'authCode_jwt' and send data 'redirect_uri_dict' and send script 'zen_location' and execute zencode and output into 'response'
Then I send object 'http_headers_temp' and send path 'response_path' and send value 'response' and manipulate and set and output into 'http_headers'

Then I manipulate and delete and output into 'authCode_jwt'
Then I manipulate and delete and output into 'response'