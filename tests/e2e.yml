# - par
# - authorize
# - token
# - 
version: "1.1"
name: test all the microservices
config:
  http:
    baseURL: http://localhost:3000
tests:
  creation:
    name: PAR endpoint
    steps:
      - http:
          url: /authz_server/par
          method: POST
          json:
            response_type: code
            client_id: did:dyne:sandbox.genericissuer:6Cp8mPUvJmQaMxQPSnNyhb74f9Ga4WqfXCkBneFgikm5
            state: xyz
            scope: Auth1
            resource: https://issuer1.zenswarm.forkbomb.eu/credential_issuer/
            code_challenge: E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM
            code_challenge_method: S256
            redirect_uri: didroom://openwallet-credential
            client_secret: eyJhbGciOiJFUzI1NiJ9.eyJzdWIiOiJwaXBwbyJ9.hiVPL2JTdmcZY7Vcso95KUBEzcTGvmvQ7wlwkCo0G74Unpzny2drvLsu-HzHWyckKbRjwWox-V5gqqKeka8kEQ
          check:
            co2:
              - lte: 0.01 # in grams
            status: 201

  credential:
    name: Creation endpoints
    steps:
      - http:
          url: /credential_issuer/create
          method: POST
          headers:
            Content-Type: application/json
            accept: application/json
          json:
            object:
              name: qui in veniam Ut officia
              age: -74567357
            fields:
              - name
              - age
          check:
            co2:
              - lte: 0.05 # in grams
            status: 200
            schema:
              type: object
              properties:
                holder_jwk:
                  type: object
                  properties:
                    crv:
                      type: string
                    d:
                      type: string
                    kty:
                      type: string
                    x:
                      type: string
                    y:
                      type: string
                  required:
                  - crv
                  - d
                  - kty
                  - x
                  - y
                holder_public_jwk:
                  type: object
                  properties:
                    crv:
                      type: string
                    kty:
                      type: string
                    x:
                      type: string
                    y:
                      type: string
                  required:
                  - crv
                  - kty
                  - x
                  - y
                issuer_jwk:
                  type: object
                  properties:
                    crv:
                      type: string
                    d:
                      type: string
                    kty:
                      type: string
                    x:
                      type: string
                    y:
                      type: string
                  required:
                  - crv
                  - d
                  - kty
                  - x
                  - y
                issuer_public_jwk:
                  type: object
                  properties:
                    crv:
                      type: string
                    kty:
                      type: string
                    x:
                      type: string
                    y:
                      type: string
                  required:
                  - crv
                  - kty
                  - x
                  - y
                vcsdjwt:
                  type: string
              required:
              - holder_jwk
              - holder_public_jwk
              - issuer_jwk
              - issuer_public_jwk
              - vcsdjwt

